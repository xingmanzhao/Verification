<Window x:Class="Regex.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Regex"
        Title="MainWindow" Width="525" Loaded="Window_Loaded" Height="314">
    <Window.Resources>
        <local:BorderConverter x:Key="borderConverter"/>
    </Window.Resources>
    <Grid>
    	<Grid.RowDefinitions>
    		<RowDefinition Height="Auto"/>
    		<RowDefinition/>
    	</Grid.RowDefinitions>
    	<Grid.ColumnDefinitions>
    		<ColumnDefinition/>
    	</Grid.ColumnDefinitions>

        <Button Command="{Binding VerifyRegexCommand}" Margin="2,1" Content="Verify" FontWeight="Bold" FontSize="16" Foreground="#FF0D6E7E" Height="30"/>
    	<Border Grid.Row="1" BorderThickness="1" VerticalAlignment="Top" Margin="2,0,2,3">
    		<Border.BorderBrush>
    			<SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveCaptionColorKey}}"/>
    		</Border.BorderBrush>
    		<Grid>
    			<Grid.RowDefinitions>
    				<RowDefinition Height="Auto"/>
    				<RowDefinition Height="Auto"/>
    				<RowDefinition Height="Auto"/>
    				<RowDefinition/>
    			</Grid.RowDefinitions>
    			<Grid.ColumnDefinitions>
    				<ColumnDefinition MinWidth="80" Width="Auto"/>
    				<ColumnDefinition/>
    			</Grid.ColumnDefinitions>
    			<TextBlock TextWrapping="Wrap" Text="Source" Margin="0,0,3,0" FlowDirection="RightToLeft" VerticalAlignment="Center" Background="#FFF7F7F7"/>
    			<TextBlock TextWrapping="Wrap" Text="RegExp" Margin="0,0,3,0" Grid.Row="1" FlowDirection="RightToLeft" VerticalAlignment="Center" Background="#FFF7F7F7"/>
    			<TextBlock TextWrapping="Wrap" Text="Result" Margin="0,0,3,0" Grid.Row="2" FlowDirection="RightToLeft" VerticalAlignment="Center" Background="#FFE3E4E4"/>
                <Border Margin="0,0,0,2" Grid.Column="1" Height="30" BorderThickness="{Binding IsValidMatchSource, Converter={ StaticResource borderConverter}}" BorderBrush="Red" CornerRadius="3">
    				<TextBox TextWrapping="Wrap" Text="{Binding MatchSource}" VerticalContentAlignment="Center" Background="#FFF7F7F7"/>
    			</Border>
                <Border Margin="0,2" Grid.Column="1" Grid.Row="1" Height="30" BorderBrush="Red" BorderThickness="{Binding IsValidRegExp, Converter={StaticResource borderConverter}}" CornerRadius="3">
                	<TextBox TextWrapping="Wrap" Text="{Binding RegExp}" VerticalContentAlignment="Center" Background="#FFF7F7F7"/>
                </Border>
                <Border Margin="0,2,0,0" Grid.Column="1" Grid.Row="2" Height="30" CornerRadius="3">
                	<TextBox TextWrapping="Wrap" Text="{Binding MatchResult}" VerticalContentAlignment="Center" Background="#FFE3E4E4" Foreground="#FF0023FF" FontWeight="Bold"/>
                </Border>
                <GroupBox Header="GroupBox" Grid.Row="3" Grid.ColumnSpan="2">
                	<Grid>
                		<Grid.RowDefinitions>
                			<RowDefinition Height="Auto"/>
                			<RowDefinition Height="Auto"/>
                			<RowDefinition/>
                		</Grid.RowDefinitions>
                		<Grid.ColumnDefinitions>
                			<ColumnDefinition Width="Auto"/>
                			<ColumnDefinition/>
                		</Grid.ColumnDefinitions>
                		<Button HorizontalAlignment="Left" Width="25" Margin="0" VerticalAlignment="Center" Height="25" Content="+" Command="{Binding AddGroupCommand}"/>
                		<Button HorizontalAlignment="Left" Width="25" Margin="0" VerticalAlignment="Center" Height="25" Content="-" Grid.Row="1" Command="{Binding RemoveGroupCommand}"/>
                		<ListBox Margin="3,0,0,0" MinHeight="100" Grid.Column="1" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Grid.RowSpan="3" ItemsSource="{Binding GroupCollection, Mode=TwoWay}" SelectedItem="{Binding SelectedGroup, Mode=TwoWay}" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}">
                			<ListBox.Resources>
                				<Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
                					<Setter Property="Background" Value="Transparent"/>
                					<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                					<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                					<Setter Property="Padding" Value="2,0,0,0"/>
                					<Setter Property="Template">
                						<Setter.Value>
                							<ControlTemplate TargetType="{x:Type ListBoxItem}">
                								<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                									<TextBox x:Name="textBox" Height="Auto" TextWrapping="NoWrap" Text="{Binding GroupName}" Width="Auto" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="20,0,0,2" Foreground="#FF5F5D5D" AutoWordSelection="True"/>
                								</Border>
                								<ControlTemplate.Triggers>
                									<Trigger Property="IsSelected" Value="true">
                										<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                									</Trigger>
                									<MultiTrigger>
                										<MultiTrigger.Conditions>
                											<Condition Property="IsSelected" Value="true"/>
                											<Condition Property="Selector.IsSelectionActive" Value="False"/>
                										</MultiTrigger.Conditions>
                										<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                									</MultiTrigger>
                									<Trigger Property="IsEnabled" Value="false">
                										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                									</Trigger>
                								</ControlTemplate.Triggers>
                							</ControlTemplate>
                						</Setter.Value>
                					</Setter>
                				</Style>
                			</ListBox.Resources>
                		</ListBox>
                	</Grid>
                </GroupBox>
    		</Grid>
        
    	</Border>
        
    </Grid>
</Window>
